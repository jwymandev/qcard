#!/usr/bin/env node

/**
 * This script creates a .env.production file for Digital Ocean deployment
 * It ensures that the variables are properly set for Digital Ocean App Platform
 */

const fs = require('fs');
const path = require('path');

// Environment file to create
const ENV_FILE = path.join(process.cwd(), '.env.production');

// Template for the .env.production file
const envTemplate = `# Digital Ocean Production Environment
# Generated by create-env-production.js

# This environment file is used during the build process in Digital Ocean
# It ensures proper database connection using individual environment variables

# Database Configuration - Constructed at runtime from individual env vars
# Do not set a DATABASE_URL here - it will be constructed at runtime from:
# DATABASE_HOST, DATABASE_PORT, DATABASE_USERNAME, DATABASE_PASSWORD, DATABASE_NAME
DATABASE_PROVIDER=postgresql

# Skip validation during build (removes dependency on database for building)
SKIP_ENV_VALIDATION=true

# Node environment
NODE_ENV=production

# Next Auth Configuration
# Note: NEXTAUTH_URL and NEXTAUTH_SECRET are set in Digital Ocean
`;

// Write the file
fs.writeFileSync(ENV_FILE, envTemplate);

console.log(`Created ${ENV_FILE} for Digital Ocean deployment`);
console.log('This file ensures the build process works correctly in Digital Ocean App Platform');
console.log('Remember to set the following environment variables in Digital Ocean:');
console.log('- DATABASE_HOST');
console.log('- DATABASE_PORT');
console.log('- DATABASE_USERNAME');
console.log('- DATABASE_PASSWORD');
console.log('- DATABASE_NAME');
console.log('- NEXTAUTH_URL');
console.log('- NEXTAUTH_SECRET');
console.log('- Any other required variables (Stripe, etc.)');